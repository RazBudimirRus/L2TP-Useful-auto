#!/bin/bash

# Скрипт установки L2TP IPSec Tunnel Restore
# Автор: PROJECT7
# Версия: 1.0

set -euo pipefail

# Конфигурация
INSTALL_DIR="/opt/l2tp-tunnel"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SERVICE_USER="root"
SERVICE_GROUP="root"

# Цвета для вывода
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Функция логирования
log() {
    local level="$1"
    shift
    local message="$*"
    
    case "$level" in
        "INFO")
            echo -e "${GREEN}[INFO]${NC} $message"
            ;;
        "WARN")
            echo -e "${YELLOW}[WARN]${NC} $message"
            ;;
        "ERROR")
            echo -e "${RED}[ERROR]${NC} $message"
            ;;
        "DEBUG")
            echo -e "${BLUE}[DEBUG]${NC} $message"
            ;;
    esac
}

# Функция проверки прав root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        log "ERROR" "Этот скрипт должен быть запущен с правами root"
        exit 1
    fi
}

# Функция проверки зависимостей
check_dependencies() {
    log "INFO" "Проверяем зависимости..."
    
    local missing_deps=()
    
    # Проверяем необходимые команды
    local required_commands=("systemctl" "ip" "ping" "iptables" "ipsec" "xl2tpd")
    
    for cmd in "${required_commands[@]}"; do
        if ! command -v "$cmd" >/dev/null 2>&1; then
            missing_deps+=("$cmd")
        fi
    done
    
    if [[ ${#missing_deps[@]} -gt 0 ]]; then
        log "ERROR" "Отсутствуют необходимые зависимости: ${missing_deps[*]}"
        log "INFO" "Установите их с помощью:"
        log "INFO" "  apt update && apt install -y strongswan xl2tpd iptables-persistent"
        exit 1
    fi
    
    log "INFO" "Все зависимости найдены"
}

# Функция создания директорий
create_directories() {
    log "INFO" "Создаем директории..."
    
    mkdir -p "$INSTALL_DIR"
    mkdir -p "/var/log"
    mkdir -p "/etc/iptables"
    
    log "INFO" "Директории созданы"
}

# Функция копирования файлов
copy_files() {
    log "INFO" "Копируем файлы..."
    
    # Копируем основные скрипты
    cp "$SCRIPT_DIR/l2tp-tunnel-restore.sh" "$INSTALL_DIR/"
    cp "$SCRIPT_DIR/l2tp-tunnel-monitor.sh" "$INSTALL_DIR/"
    cp "$SCRIPT_DIR/l2tp-tunnel-status.sh" "$INSTALL_DIR/"
    cp "$SCRIPT_DIR/l2tp-tunnel-diagnostic.sh" "$INSTALL_DIR/"
    cp "$SCRIPT_DIR/l2tp-tunnel-debug.sh" "$INSTALL_DIR/"
    cp "$SCRIPT_DIR/quick-check.sh" "$INSTALL_DIR/"
    cp "$SCRIPT_DIR/tunnel-config.conf" "$INSTALL_DIR/"
    
    # Устанавливаем права
    chmod +x "$INSTALL_DIR/l2tp-tunnel-restore.sh"
    chmod +x "$INSTALL_DIR/l2tp-tunnel-monitor.sh"
    chmod +x "$INSTALL_DIR/l2tp-tunnel-status.sh"
    chmod +x "$INSTALL_DIR/l2tp-tunnel-diagnostic.sh"
    chmod +x "$INSTALL_DIR/l2tp-tunnel-debug.sh"
    chmod +x "$INSTALL_DIR/quick-check.sh"
    chmod 644 "$INSTALL_DIR/tunnel-config.conf"
    
    # Устанавливаем владельца
    chown -R "$SERVICE_USER:$SERVICE_GROUP" "$INSTALL_DIR"
    
    log "INFO" "Файлы скопированы"
}

# Функция установки systemd сервисов
install_services() {
    log "INFO" "Устанавливаем systemd сервисы..."
    
    # Копируем файлы сервисов
    cp "$SCRIPT_DIR/l2tp-tunnel-restore.service" "/etc/systemd/system/"
    cp "$SCRIPT_DIR/l2tp-tunnel-monitor.service" "/etc/systemd/system/"
    
    # Перезагружаем systemd
    systemctl daemon-reload
    
    # Включаем сервисы
    systemctl enable l2tp-tunnel-restore.service
    systemctl enable l2tp-tunnel-monitor.service
    
    log "INFO" "Сервисы установлены и включены"
}

# Функция настройки iptables
setup_iptables() {
    log "INFO" "Настраиваем iptables..."
    
    # Создаем базовые правила если их нет
    if [[ ! -f "/etc/iptables/rules.v4" ]]; then
        log "INFO" "Создаем базовые правила iptables"
        cat > "/etc/iptables/rules.v4" << 'EOF'
# Generated by L2TP Tunnel Restore
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT

*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT
EOF
    fi
    
    # Включаем загрузку правил при старте
    if ! systemctl is-enabled netfilter-persistent >/dev/null 2>&1; then
        systemctl enable netfilter-persistent
    fi
    
    log "INFO" "iptables настроен"
}

# Функция создания cron задачи для мониторинга
setup_cron() {
    log "INFO" "Настраиваем cron для периодических проверок..."
    
    # Создаем cron задачу для ежедневной проверки в 3:00
    cat > "/etc/cron.d/l2tp-tunnel-check" << EOF
# L2TP Tunnel Health Check
0 3 * * * root $INSTALL_DIR/l2tp-tunnel-restore.sh >> /var/log/l2tp-tunnel-cron.log 2>&1
EOF
    
    chmod 644 "/etc/cron.d/l2tp-tunnel-check"
    
    log "INFO" "Cron настроен"
}

# Функция настройки логирования
setup_logging() {
    log "INFO" "Настраиваем логирование..."
    
    # Создаем logrotate конфигурацию
    cat > "/etc/logrotate.d/l2tp-tunnel" << EOF
/var/log/l2tp-tunnel*.log {
    daily
    missingok
    rotate 30
    compress
    delaycompress
    notifempty
    create 644 root root
    postrotate
        systemctl reload l2tp-tunnel-monitor.service > /dev/null 2>&1 || true
    endscript
}
EOF
    
    log "INFO" "Логирование настроено"
}

# Функция тестирования установки
test_installation() {
    log "INFO" "Тестируем установку..."
    
    # Проверяем файлы
    if [[ ! -f "$INSTALL_DIR/l2tp-tunnel-restore.sh" ]]; then
        log "ERROR" "Основной скрипт не найден"
        return 1
    fi
    
    if [[ ! -f "$INSTALL_DIR/l2tp-tunnel-status.sh" ]]; then
        log "ERROR" "Скрипт проверки статуса не найден"
        return 1
    fi
    
    if [[ ! -f "$INSTALL_DIR/l2tp-tunnel-diagnostic.sh" ]]; then
        log "ERROR" "Скрипт диагностики не найден"
        return 1
    fi
    
    # Проверяем сервисы
    if ! systemctl is-enabled l2tp-tunnel-restore.service >/dev/null 2>&1; then
        log "ERROR" "Сервис восстановления не включен"
        return 1
    fi
    
    # Тестируем синтаксис скриптов
    if ! bash -n "$INSTALL_DIR/l2tp-tunnel-restore.sh"; then
        log "ERROR" "Синтаксическая ошибка в основном скрипте"
        return 1
    fi
    
    if ! bash -n "$INSTALL_DIR/l2tp-tunnel-monitor.sh"; then
        log "ERROR" "Синтаксическая ошибка в скрипте мониторинга"
        return 1
    fi
    
    if ! bash -n "$INSTALL_DIR/l2tp-tunnel-status.sh"; then
        log "ERROR" "Синтаксическая ошибка в скрипте проверки статуса"
        return 1
    fi
    
    if ! bash -n "$INSTALL_DIR/l2tp-tunnel-diagnostic.sh"; then
        log "ERROR" "Синтаксическая ошибка в скрипте диагностики"
        return 1
    fi
    
    log "INFO" "Установка прошла успешно"
}

# Функция показа информации
show_info() {
    log "INFO" "=== Информация об установке ==="
    log "INFO" "Установочная директория: $INSTALL_DIR"
    log "INFO" "Конфигурационный файл: $INSTALL_DIR/tunnel-config.conf"
    log "INFO" "Лог файлы: /var/log/l2tp-tunnel*.log"
    log "INFO" ""
    log "INFO" "Управление сервисами:"
    log "INFO" "  systemctl start l2tp-tunnel-restore.service"
    log "INFO" "  systemctl start l2tp-tunnel-monitor.service"
    log "INFO" "  systemctl status l2tp-tunnel-restore.service"
    log "INFO" "  systemctl status l2tp-tunnel-monitor.service"
    log "INFO" ""
    log "INFO" "Ручной запуск:"
    log "INFO" "  $INSTALL_DIR/l2tp-tunnel-restore.sh"
    log "INFO" "  $INSTALL_DIR/l2tp-tunnel-status.sh"
    log "INFO" "  $INSTALL_DIR/l2tp-tunnel-diagnostic.sh"
    log "INFO" "  $INSTALL_DIR/l2tp-tunnel-debug.sh"
    log "INFO" "  $INSTALL_DIR/quick-check.sh"
    log "INFO" ""
    log "INFO" "Не забудьте настроить $INSTALL_DIR/tunnel-config.conf под ваши параметры!"
}

# Основная функция
main() {
    log "INFO" "=== Установка L2TP IPSec Tunnel Restore ==="
    
    check_root
    check_dependencies
    create_directories
    copy_files
    install_services
    setup_iptables
    setup_cron
    setup_logging
    
    if test_installation; then
        show_info
        log "INFO" "=== Установка завершена успешно ==="
    else
        log "ERROR" "=== Установка завершена с ошибками ==="
        exit 1
    fi
}

# Запуск основной функции
main "$@"

